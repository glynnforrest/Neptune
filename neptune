#!/usr/bin/php
<?php

//this script needs to be in the root directory of your app to work properly.
//Make sure that you have run `composer install` if the autoloader isn't working.

include('vendor/autoload.php');

use Neptune\Config\Config;
use Neptune\Core\Neptune;
use Neptune\Console\Application as ConsoleApplication;
use Neptune\Console\OutputFormatter;

use Symfony\Component\Console\Output\ConsoleOutput;

$output = new ConsoleOutput();
$output->setFormatter(new OutputFormatter());

//load neptune config
$config = 'config/neptune.php';

if(file_exists($config)) {
    $c = new Config('neptune', $config);
} else {
//write a warning if no neptune config is present and this isn't the setup command
    if(!isset($_SERVER['argv'][1]) || $_SERVER['argv'][1] !== 'setup') {
        $output->writeln('<error>No neptune config file found!</error>');
        $output->writeln('<error>You should run create:config to create config/neptune.php</error>');
        $output->writeln('<info>Creating temporary neptune config...</info>');
    }
    $c = new Config('neptune');
}

$c->setRootDirectory(__DIR__ . '/');

$neptune = new Neptune(__DIR__);
$neptune['config'] = $c;
//register all the application services

if (file_exists('app/Application.php')) {
    include('app/Application.php');
    $app = new \Application();
    $app->start($neptune);
    $app->console($neptune, $output);
}

//off we go
$app = new ConsoleApplication($neptune);

$app->run(null, $output);
